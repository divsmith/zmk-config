/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>

// Layer Definitions
#define SYMBOLS 1
#define NUMBERS 2
#define ARROWS 3
#define NAV 4
#define MEDIA 5
#define BLUETOOTH 6

// Keycode Definitions
#define HYP LS(LC(LA(LGUI)))
#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key) LS(LC(LA(key)))

&caps_word {
	continue-list = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z UNDERSCORE MINUS BSPC DEL SYMBOLS>;
};

/ {
	combos {
		compatible = "zmk,combos";
		
		combo_caps_word {
			timeout-ms = <50>;
			key-positions = <15 20>;
			bindings = <&caps_word>;
		};
	};
};

/ {
	behaviors {
		spaceb: space_backspace {
			compatible = "zmk,behavior-mod-morph";
			label = "SPACE_BACKSPACE";
			#binding-cells = <0>;
			bindings = <&ht_tp HYP SPACE>, <&ht_tp DEL BSPC>;
			mods = <(MOD_RSFT)>;
		};
		
		lsb: left_shift_bracket {
			compatible = "zmk,behavior-mod-morph";
			label = "LEFT_SHIFT_BRACKET";
			#binding-cells = <0>;
			bindings =  <&kp LBRC>, <&kp LBKT>;
			mods = <(MOD_LSFT)>;
		};
		
		rsb: right_shift_bracket {
			compatible = "zmk,behavior-mod-morph";
			label = "RIGHT_SHIFT_BRACKET";
			#binding-cells = <0>;
			bindings = <&kp RBRC>, <&kp RBKT>;
			mods = <(MOD_LSFT)>;
		};
	};
	
	// Keymap Template
	//
	// | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  |
	// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  |
	// | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 |
	//               | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
			&kp Q &kp W &ltf NAV E &kp R &kp T                     &kp Y &kp U &bhm RC(RALT) I &kp O &kp P
			&bhm LCTRL A &kp S &bhm LSHFT D &bhm LGUI F &kp G     &kp H &bhm RGUI J &bhm RSFT K &kp L &bhm RCTRL APOS
			&bhm LALT Z  &kp X &kp C &ltf ARROWS V                 &kp B &lt BLUETOOTH N &lt MEDIA M &kp COMMA &kp DOT &bhm RALT FSLH
			&trans &escTap SYMBOLS ESC &kp RSHFT        &spaceb &ltf NUMBERS RET &trans
			>;
		};
		
		symbol_layer {
			bindings = <
			&trans &trans &trans &trans &trans       &kp BSLH    &kp PIPE    &kp LPAR &kp RPAR &kp GRAVE
			&trans &trans &trans &trans &trans       &kp MINUS &kp EQUAL &lsb &rsb &kp SEMI
			&trans &trans &trans &trans &trans       &trans    &trans    &kp LT   &kp GT   &trans
			&trans &trans &trans       &ht_tp DEL BSPC &kp TAB &trans
			>;
		};
		
		number_layer {
			bindings = <
			&trans &kp N7 &kp N8 &kp N9 &trans       &trans &trans &trans &trans &trans
			&trans &kp N4 &kp N5 &kp N6 &trans       &trans &trans &trans &trans &trans
			&trans &kp N1 &kp N2 &kp N3 &trans       &trans &trans &trans &trans &trans
			&trans &kp N0 &trans       &trans &trans &trans
			>;
		};
		
		arrow_layer {
			bindings = <
			&trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans       &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
			&trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans       &trans &trans &trans
			>;
		};
		
		nav_layer {
			bindings = <
			&trans &trans &trans &trans &trans       &trans &trans          &kp LS(LG(LBRC)) &kp LS(LG(RBRC)) &trans
			&trans &trans &trans &trans &trans       &trans &kp HYPER(LEFT) &kp MEH(LEFT)    &kp MEH(RIGHT)   &kp HYPER(RIGHT)
			&trans &trans &trans &trans &trans       &trans &kp LC(LEFT)    &kp HYPER(F13)   &kp HYPER(F14)  &kp LC(RIGHT)
			&trans &trans &trans       &trans &kp MEH(RET)    &trans
			>;
		};
		
		media_layer {
			bindings = <
			&trans &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans       &trans &trans &trans &trans &trans
			&trans &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans                         &trans &trans &trans &trans &trans
			&trans &trans &trans                         &trans &trans &trans
			>;
		};
		
		bluetooth_layer {
			bindings = <
			&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans                                       &trans &trans &trans &trans &trans
			&bt BT_CLR &trans &trans &trans &trans                                       &trans &bootloader &trans &trans &trans
			&trans &trans &trans                                          &trans &trans &trans
			>;
		};
		
		empty_layer {
			bindings = <
			&trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans       &trans &trans &trans &trans &trans
			&trans &trans &trans       &trans &trans &trans
			>;
		};
		
		
	};
};
